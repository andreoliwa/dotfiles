- name: "Stop all containers"
  shell: "docker ps -q | xargs docker stop"
  # No containers might be running
  ignore_errors: true
  register: last_execution_docker
  when: "'docker_stop_containers' | run_only_after"

- name: "List all volumes related to a Docker Compose project"
  command: "docker volume ls --filter label=com.docker.compose.project -q"
  register: docker_compose_volumes
  when: last_execution_docker is not skipped

- name: "Create {{ backup_dir }}/docker_volumes/"
  file:
    state: directory
    path: "{{ backup_dir }}/docker_volumes/"

- name: "Backup each volume in {{ backup_dir }}/docker_volumes/"
  command: "docker-volume backup {{ backup_dir }}/docker_volumes/ {{ item }}"
  with_items: "{{ docker_compose_volumes.stdout_lines }}"
  when: last_execution_docker is not skipped

- name: "Start the PostgreSQL Docker container ({{ role_path }})"
  command: "docker-compose -f ~/container-apps/postgres/docker-compose.yml up -d"

# I had to create a symlink because psql was not working:
# https://stackoverflow.com/questions/42356309/mac-psql-readline-library-not-loaded
# $ psql
# dyld: Library not loaded: /usr/local/opt/readline/lib/libreadline.7.dylib
#   Referenced from: /usr/local/bin/psql
#   Reason: image not found
# Aborted
# I ran:
# ln -s /usr/local/opt/readline/lib/libreadline.8.dylib /usr/local/opt/readline/lib/libreadline.7.dylib
- name: "Backup all local PostgreSQL 10 databases to .sql files: postgresx postgresql://postgres:$POSTGRES_PASSWORD@localhost:7710 backup {{ backup_dir }}"
  command: "postgresx postgresql://postgres:$POSTGRES_PASSWORD@localhost:7710 backup {{ backup_dir }}"
