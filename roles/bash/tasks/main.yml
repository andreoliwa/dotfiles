- include_tasks: "install_{{ ansible_os_family | lower }}.yml"

- name: "Link .bash_profile file"
  file:
    src: "{{ role_path }}/files/.bash_profile.link"
    dest: ~/.bash_profile
    state: link
    force: yes
    follow: false

- name: "Link .bashrc file"
  file:
    src: "{{ role_path }}/files/.bashrc.link"
    dest: ~/.bashrc
    state: link
    force: yes
    follow: false

- name: "Link .inputrc file"
  file:
    src: "{{ role_path }}/files/.inputrc.link"
    dest: ~/.inputrc
    state: link
    force: yes
    follow: false

- name: "bash-powerline: Get latest"
  get_url:
    url: "https://raw.githubusercontent.com/riobard/bash-powerline/master/bash-powerline.sh"
    dest: ~/.bash-powerline.sh

- name: "bash-git-prompt: Git clone"
  git:
    repo: "https://github.com/magicmonty/bash-git-prompt.git"
    dest: "~/.bash-git-prompt"
    clone: yes
    depth: 1

# https://github.com/powerline/powerline
# https://github.com/b-ryan/powerline-shell
# They are both slow and ugly (maybe a font needs to be configured).
# Too much hassle to configure, not ready out of the box.

- name: "z: Get script"
  get_url:
    url: "https://raw.githubusercontent.com/rupa/z/master/z.sh"
    dest: ~/.local/share/z.sh

- name: "Create cached script that will be sourced on .bashrc"
  command: "dotfiles-cache-shell-scripts -f bash"

- name: "Add content to .bashrc"
  blockinfile:
    path: ~/.bashrc
    marker: "#################### {mark} CREATED BY ANSIBLE - DON'T EDIT MANUALLY ####################"
    block: |
      # https://github.com/direnv/direnv
      eval "$(direnv hook bash)"

      # https://github.com/rupa/z/blob/master/z.sh
      if [[ $OSTYPE == linux* ]]; then
          export _Z_NO_PROMPT_COMMAND=1
      fi
      source ~/.local/share/z.sh

      # https://github.com/riobard/bash-powerline
      # Super quick start, but it doesn't show an icon for stashed commits
      # source ~/.bash-powerline.sh

      # https://github.com/magicmonty/bash-git-prompt
      # Quick start, show all details of a git repo
      if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
          GIT_PROMPT_ONLY_IN_REPO=1
          source $HOME/.bash-git-prompt/gitprompt.sh
      fi

      if [ -f $(brew --prefix)/etc/bash_completion ]; then
        source $(brew --prefix)/etc/bash_completion
      fi

      # Source all scripts. To regenerate this .sh file, run:
      # dotfiles-cache-shell-scripts -f bash
      source ~/.cache/dotfiles/cached_script.sh
