- name: "{{ dir }}: git clone {{ repo }} {{ root }}/{{ dir }} (update: {{ update }})"
  git:
    repo: "{{ repo }}"
    dest: "{{ root }}/{{ dir }}"
    clone: yes
    update: "{{ update }}"

- name: "{{ dir }}: Create virtualenv {{ env }} with Python {{ version }}"
  when: create_env
  pyenv:
    subcommand: virtualenv
    version: "{{ version }}"
    virtualenv_name: "{{ env }}"

- name: "{{ dir }}: pyenv local {{ env }} {{ local }}"
  when: create_env
  command: "pyenv local {{ env }} {{ local }}"
  args:
    chdir: "{{ root }}/{{ dir }}"
    creates: "{{ root }}/{{ dir }}/.python-version"

- name: "{{ dir }}: Check if the symlink directory exists"
  stat: path="{{ symlink_dir }}"
  register: symlink_dir_stat

- name: "{{ dir }}: Link dotted files"
  file:
    src: "{{ item }}"
    dest: "{{ root }}/{{ dir }}/{{ item | basename | splitext | first }}"
    state: link
    force: yes
  with_fileglob:
    - "{{ symlink_dir_stat.stat.path }}/.*.link"
  when: symlink_dir_stat.stat.exists and symlink_dir_stat.stat.isdir

- name: "{{ dir }}: Link regular files"
  file:
    src: "{{ item }}"
    dest: "{{ root }}/{{ dir }}/{{ item | basename | splitext | first }}"
    state: link
    force: yes
  with_fileglob:
    - "{{ symlink_dir_stat.stat.path }}/*.link"
  when: symlink_dir_stat.stat.exists and symlink_dir_stat.stat.isdir

- name: "{{ dir }}: Add VIRTUAL_ENV variable to .autoenv file (useful for pipenv --venv)"
  when: create_env
  lineinfile:
    path: "{{ root }}/{{ dir }}/.autoenv"
    state: present
    create: yes
    regexp: "^.+ VIRTUAL_ENV="
    line: "export VIRTUAL_ENV={{ pyenv_root }}/versions/{{ env }}"
