version: "2.1"

networks:
  net10:
    name: postgres10
    external: true
  mayan:
    name: mayan

volumes:
  broker:
    driver: local
  app:
    driver: local
  results:
    driver: local

services:
  broker:
    container_name: mayan-broker
    image: healthcheck/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: mayan
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: mayan
    networks:
      - mayan
    volumes:
      - broker:/var/lib/rabbitmq
  results:
    container_name: mayan-results
    image: healthcheck/redis
    networks:
      - mayan
    volumes:
      - results:/data
  mayan:
    container_name: mayan-app
    image: mayanedms/mayanedms:latest
    depends_on:
      broker:
        condition: service_healthy
      results:
        condition: service_healthy
    networks:
      - net10
      - mayan
    environment:
      MAYAN_CELERY_BROKER_URL: amqp://mayan:mayan@broker:5672/mayan
      MAYAN_CELERY_RESULT_BACKEND: redis://results:6379/0
      MAYAN_DATABASE_ENGINE: django.db.backends.postgresql
      MAYAN_DATABASE_HOST: postgres10
      MAYAN_DATABASE_NAME: mayan
      MAYAN_DATABASE_USER: mayan
      MAYAN_DATABASE_PASSWORD: ${MAYAN_DATABASE_PASSWORD}
      MAYAN_APT_INSTALLS: "tesseract-ocr-deu tesseract-ocr-por tesseract-ocr-ita"
      MAYAN_DOCUMENTS_LANGUAGE: deu
      MAYAN_TIME_ZONE: Europe/Berlin
      # http://localhost:8001/#/settings/namespace/documents/
      MAYAN_DOCUMENTS_CACHE_STORAGE_BACKEND_ARGUMENTS: '{location: /var/lib/mayan_cache/document_cache}'
      # http://localhost:8001/#/settings/namespace/sources/
      MAYAN_SOURCES_STAGING_FILE_CACHE_STORAGE_BACKEND_ARGUMENTS: '{location: /var/lib/mayan_cache/staging_file_cache}'
    ports:
      - "8001:8000"
    volumes:
      - ~/Library/Caches/mayan:/var/lib/mayan_cache
      - ~/Dropbox/Apps/mayan/lib:/var/lib/mayan
      - ~/Dropbox/Apps/mayan/staging:/srv/staging
      - ~/Dropbox/Apps/mayan/watch:/srv/watch
