- name: "Save role path variable to be used on 'include_role' below"
  set_fact:
    personal_role_path: "{{ role_path }}"

# My private scripts toolbox
- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/toolbox.git"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/nitpick.git"
    # Travis is using 3.5.6, in which pytest 5.4.1 works: https://travis-ci.com/github/andreoliwa/nitpick/jobs/308512851
    # platform linux -- Python 3.5.6, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- /home/travis/virtualenv/python3.5.6/bin/python
    # Using the latest Python 3.5 has failed before.
    python_version: "{{ latest_python_3_5.stdout }}"
    # python_version: "3.5.6"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/container-apps.git"
    root: ~/

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/dontforget.git"
    python_version: "{{ latest_python_3_7.stdout }}"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/python-clib.git"
    python_version: "{{ latest_python_3_7.stdout }}"

# https://github.com/andreoliwa/python-clib
# Editable mode (-e) not working anymore with pipx, since I removed setup.py:
# ERROR: File "setup.py" not found. Directory cannot be installed in editable mode: /Users/aa/Code/python-clib
# (A "pyproject.toml" file was found, but editable mode currently requires a setup.py based build.)
- name: "clib: Install with: pipx install {{ project_root }}/python-clib/"
  command: "pipx install {{ project_root }}/python-clib/"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/answering-machine.git"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/scrapy-tegenaria.git"
    symlink_dir: "{{ personal_role_path }}/files/scrapy-tegenaria/{{ ansible_hostname }}"
    python_version: "{{ latest_python_3_7.stdout }}"

- include_role: name=python_repo
  vars:
    repo: "git@github.com:andreoliwa/germanize-telegram.git"

- import_tasks: vault_projects.yml
  when: not ansible_env.COMPANY_LAPTOP

- import_tasks: vault_sennder.yml
  when: ansible_env.COMPANY_LAPTOP

- import_tasks: vault_not_company.yml
  when: not ansible_env.COMPANY_LAPTOP

# This can be slow; updates can be done on a as-needed basis, for each individual repo
- name: "gitup: Update project root (for git projects that were not updated above)"
  command: "gitup {{ project_root }}"
  when: "'gitup_update_project' | run_only_after"
