# We need this for pyenv to work under xonsh (until my fork is finished, approved and merged; it's not ready for a pull request yet)
- name: "Pyenv: Hack to make it work under xonsh"
  ansible.builtin.import_tasks: xonsh_hack.yml
  when: "'xonsh' in ansible_user_shell"

- name: Check if pytest.ini file exists
  ansible.builtin.stat: path="{{ dotfiles_user_home }}/pytest.ini"
  register: python_pyenv_pytest_stat

- name: Back up pytest.ini file
  ansible.builtin.command: mv ~/pytest.ini ~/pytest.ini.bak
  args:
    creates: "{{ dotfiles_user_home }}/pytest.ini"
  when: python_pyenv_pytest_stat.stat.exists

- name: Link pytest.ini file
  ansible.builtin.file:
    src: "{{ role_path }}/files/pytest.ini"
    dest: "{{ dotfiles_user_home }}/pytest.ini"
    state: link

- name: "Ipython: Create default profile dir"
  ansible.builtin.file:
    state: directory
    path: "~/.ipython/profile_default"

- name: "Ipython: Link ipython_config.py"
  ansible.builtin.file:
    src: "{{ role_path }}/files/ipython_config.py"
    dest: "~/.ipython/profile_default/ipython_config.py"
    state: link

# https://medium.com/@henriquebastos/the-definitive-guide-to-setup-my-python-workspace-628d68552e14
- name: "Install Python 3 versions with pyenv"
  ansible.builtin.import_tasks: python3.yml
- name: "Install Python 2 versions with pyenv"
  ansible.builtin.import_tasks: python2.yml

- name: "Set global pyenv versions"
  ansible.builtin.shell: >-
    {{ pyenv_root }}/bin/pyenv global
    {{ python_pyenv_latest_python_3_14.stdout }}
    {{ python_pyenv_latest_python_3_13.stdout }}
    {{ python_pyenv_latest_python_3_12.stdout }}
    {{ python_pyenv_latest_python_3_11.stdout }}
    {{ python_pyenv_latest_python_3_10.stdout }}
    {{ python_pyenv_latest_python_3_9.stdout }}
    {{ latest_python_2_7.stdout }}
    system

- name: "Install pipx"
  ansible.builtin.import_tasks: pipx.yml

- name: "Install JetBrains PyCharm"
  ansible.builtin.import_tasks: pycharm.yml
