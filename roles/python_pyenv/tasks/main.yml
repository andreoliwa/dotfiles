# We need this for pyenv to work under xonsh (until my fork is finished, approved and merged; it's not ready for a pull request yet)
- import_tasks: xonsh_hack.yml
  when: "'xonsh' in ansible_user_shell"

- name: Check if pytest.ini file exists
  stat: path="{{ dotfiles_user_home }}/pytest.ini"
  register: pytest_stat

- name: Back up pytest.ini file
  command: mv ~/pytest.ini ~/pytest.ini.bak
  args:
    creates: "{{ dotfiles_user_home }}/pytest.ini"
  when: pytest_stat.stat.exists

- name: Link pytest.ini file
  file:
    src: "{{ role_path }}/files/pytest.ini"
    dest: "{{ dotfiles_user_home }}/pytest.ini"
    state: link

# https://medium.com/@henriquebastos/the-definitive-guide-to-setup-my-python-workspace-628d68552e14
- name: "Install Python 3 versions with pyenv"
  import_tasks: python3.yml
- name: "Install Python 2 versions with pyenv"
  import_tasks: python2.yml

- name: Set global pyenv path
  pyenv:
    subcommand: global
    versions:
      - "{{ latest_python_3_8.stdout }}"
      - "{{ latest_python_3_7.stdout }}"
      - "{{ latest_python_3_6.stdout }}"
      - "{{ latest_python_2_7.stdout }}"
      # Not stable yet
      - "{{ latest_python_3_9.stdout }}"

- name: "Install Poetry"
  import_tasks: poetry.yml

- name: "Install pipx"
  import_tasks: pipx.yml

- name: "Install Invoke"
  import_tasks: invoke.yml

- name: "pipx: Upgrade all packages (pipx upgrade-all --verbose)"
  command: "pipx upgrade-all --verbose"
  register: result
  changed_when: "'Versions did not change after running' not in result.stdout"
  # Can't run this global upgrade on the company laptop, because it has pinned packages
  when: not ansible_env.COMPANY_LAPTOP and "'pipx_upgrade_all' | run_only_after"

- name: "Install JetBrains PyCharm"
  import_tasks: pycharm.yml
