# Don't install with Homebrew; it uses python@3.9 from the Homebrew dir,
# which is then used to install pipx modules
- name: "pipx: Install from GitHub https://github.com/pipxproject/pipx#install-pipx"
  command: "python3 -m pip install -U --user pipx"
  register: this_task
  changed_when: "'Requirement already up-to-date: pipx' not in this_task.stdout"

- name: "pipx: Ensure it's on $PATH"
  command: "pipx ensurepath"
  register: this_task
  changed_when: "'is already in PATH' not in this_task.stderr"

- name: "pipx: Remove"
  with_items: "{{ python3_modules['remove'] }}"
  command: "pipx uninstall {{ item }}"

- name: "pipx: Remove on personal_laptop"
  with_items: "{{ python3_modules['company_laptop'] }}"
  command: "pipx uninstall {{ item }}"
  when: not ansible_env.COMPANY_LAPTOP and python3_modules['company_laptop']

- name: "pipx: Remove on company_laptop"
  with_items: "{{ python3_modules['personal_laptop'] }}"
  command: "pipx uninstall {{ item }}"
  when: ansible_env.COMPANY_LAPTOP and python3_modules['personal_laptop']

- name: "pipx: List invalid packages"
  shell: "pipx list | grep -e 'has invalid interpreter' -e 'has missing internal' | sed 's/^ *//g' | cut -d ' ' -f 2"
  register: pipx_invalid_packages

- name: "pipx: Remove invalid packages"
  with_items: "{{ pipx_invalid_packages.stdout_lines }}"
  command: "pipx uninstall {{ item }}"

- name: "pipx: Install common Python 3 modules globally with pipx"
  with_items: "{{ python3_modules['common'] }}"
  command: "pipx install --verbose {{ item }}"

- name: "pipx: Install on personal_laptop"
  with_items: "{{ python3_modules['personal_laptop'] }}"
  command: "pipx install --verbose {{ item }}"
  when: not ansible_env.COMPANY_LAPTOP and python3_modules['personal_laptop']

- name: "pipx: Install on company_laptop"
  with_items: "{{ python3_modules['company_laptop'] }}"
  command: "pipx install --verbose {{ item }}"
  when: ansible_env.COMPANY_LAPTOP and python3_modules['company_laptop']
