- name: "Upgrade system pip3 version on Linux"
  pip:
    name: pip
    state: latest
    executable: pip3
  when: ansible_os_family != "Darwin"

- name: "Get latest Python 3.7"
  shell: "pyenv install --list | grep -i -E ' 3.7[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_7

- name: "Install Python {{ latest_python_3_7.stdout }}"
  pyenv:
    version: "{{ latest_python_3_7.stdout }}"

- name: "Get latest Python 3.6"
  shell: "pyenv install --list | grep -i -E ' 3.6[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_6

- name: "Install Python {{ latest_python_3_6.stdout }}"
  pyenv:
    version: "{{ latest_python_3_6.stdout }}"

- name: "Get latest Python 3.5"
  shell: "pyenv install --list | grep -i -E ' 3.5[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_5

- name: "Install Python {{ latest_python_3_5.stdout }}"
  pyenv:
    version: "{{ latest_python_3_5.stdout }}"

# https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib
- name: Install a different SSL version to install Python 3.4
  apt: name=libssl1.0-dev state=latest
  become: true
  when: ansible_os_family == "Debian"

- name: "Get latest Python 3.4"
  shell: "pyenv install --list | grep -i -E ' 3.4[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_4

- name: "Install Python {{ latest_python_3_4.stdout }}"
  pyenv:
    version: "{{ latest_python_3_4.stdout }}"

- name: "jupyter3: Create virtualenv"
  pyenv:
    subcommand: virtualenv
    version: "{{ latest_python_3_6.stdout }}"
    virtualenv_name: jupyter3

- name: "jupyter3: Update pip"
  pip:
    name: pip
    state: latest
    executable: "{{ pyenv_root }}/versions/jupyter3/bin/pip"

- name: "jupyter3: Install"
  pip:
    name: jupyter
    state: latest
    executable: "{{ pyenv_root }}/versions/jupyter3/bin/pip"

- name: "jupyter3: Install ipykernel"
  command: "{{ pyenv_root }}/versions/jupyter3/bin/python -m ipykernel install --user"
  args:
    creates: "~/Library/Jupyter/kernels/python3"

- name: "tools3: Create virtualenv"
  pyenv:
    subcommand: virtualenv
    version: "{{ latest_python_3_7.stdout }}"
    virtualenv_name: tools3

- name: "tools3: Update pip"
  pip:
    name: pip
    state: latest
    executable: "{{ pyenv_root }}/versions/tools3/bin/pip"

- name: "tools3: Install modules"
  pip:
    name: "{{ item }}"
    state: latest
    executable: "{{ pyenv_root }}/versions/tools3/bin/pip"
  with_items: "{{ python3_modules }}"
