- name: Create SSH directory
  file:
    state: directory
    path: ~/.ssh

- name: Create temporary config directory to decrypt vault files
  tempfile:
    state: directory
  register: ssh_temp_dir

- name: Copy private key
  copy:
    src: "{{ role_path }}/files/vault_id_rsa"
    dest: "~/.ssh/id_rsa"
    mode: '0600'

- name: Copy public key
  copy:
    src: "{{ role_path }}/files/vault_id_rsa.pub"
    dest: "~/.ssh/id_rsa.pub"
    mode: '0600'

- name: Copy fragments to temp dir, decrypting them from the vault if necessary
  copy:
    src: "{{ role_path }}/files/ssh_config_fragments"
    dest: "{{ ssh_temp_dir.path }}"

- name: Assemble SSH config file from temp dir
  assemble:
    src: "{{ ssh_temp_dir.path }}/ssh_config_fragments"
    dest: ~/.ssh/config
    mode: '0600'
    # TODO: Remove temp dir and use decrypt when this is solved: https://github.com/ansible/ansible/issues/65450
    # decrypt: yes
    # validate: /usr/sbin/sshd -t -f %s

- name: Remove temp dir
  file:
    path: "{{ ssh_temp_dir.path }}"
    state: absent
  when: ssh_temp_dir.path is defined

- name: "Use keychain on macOS"
  lineinfile:
    path: ~/.ssh/config
    state: present
    regexp: UseKeychain
    line: "  UseKeychain yes"
    insertafter: 'PreferredAuthentications'
  when: ansible_os_family == "Darwin"

- name: "known_hosts: Remove GitHub"
  lineinfile:
    path: ~/.ssh/known_hosts
    state: absent
    regexp: github\.com

- name: "known_hosts: Remove BitBucket"
  lineinfile:
    path: ~/.ssh/known_hosts
    state: absent
    regexp: bitbucket\.org

- name: "Add GitHub and BitBucket to known hosts"
  shell: "ssh-keyscan -t rsa github.com bitbucket.org >> ~/.ssh/known_hosts"

# https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent
- name: "Add identity"
  command: "ssh-add -K ~/.ssh/id_rsa"

- name: "openssl: Add env vars to shell script"
  shell: "brew info openssl | grep ' export ' | awk '{$1=$1};1' > ~/.config/dotfiles/openssl.env"
  when: ansible_os_family == "Darwin"

- name: "openssl: Export vars on .bashrc"
  lineinfile:
    path: ~/.bashrc
    state: present
    regexp: 'source ~/.config/dotfiles/openssl.env'
    line: "test -f ~/.config/dotfiles/openssl.env && source ~/.config/dotfiles/openssl.env"
    insertafter: 'test -f'
  when: ansible_os_family == "Darwin"
