- import_tasks: darwin.yml
  when: ansible_os_family == "Darwin"
- import_tasks: debian.yml
  when: ansible_os_family == "Debian"

- name: Install tmuxp
  command: "pipx install tmuxp"
  when: tmux_install_tmuxp
  register: result
  failed_when:
    - result.rc > 0
    - "'Not installing to existing directory' not in result.stderr"
    - "'already seems to be installed' not in result.stdout"

- name: "Oh My Tmux: Install"
  git:
    repo: https://github.com/gpakosz/.tmux.git
    dest: "{{ dotfiles_user_home }}/.tmux"

- name: Install tpm
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ dotfiles_user_home }}/.tmux/plugins/tpm"

- name: "Oh My Tmux: Symlink .tmux.conf"
  file:
    src: "{{ dotfiles_user_home }}/.tmux/.tmux.conf"
    dest: "{{ dotfiles_user_home }}/.tmux.conf"
    state: link

- name: "Oh My Tmux: Symlink .tmux.conf.local"
  file:
    src: "{{ role_path }}/files/oh-my-tmux-local.conf"
    dest: "{{ dotfiles_user_home }}/.tmux.conf.local"
    state: link
# - name: Symlink .tmux.conf
#   file:
#     src: "{{ role_path }}/files/tmux.conf"
#     dest: "{{ dotfiles_user_home }}/.tmux.conf"
#     state: link
#   when: ansible_os_family != "Darwin"

# # On macOS, use the same tmux.conf, but also use
# # reattach_to_user_namespace (for clipboard support)
# - name: Symlink .tmux.conf (macOS)
#   file:
#     src: "{{ role_path }}/files/tmux-mac.conf"
#     dest: "{{ dotfiles_user_home }}/.tmux.conf"
#     state: link
#   when: ansible_os_family == "Darwin"
